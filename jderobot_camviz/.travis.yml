# while this doesn't require sudo we don't want to run within a Docker container
sudo: true
dist: trusty
language: python
python:
  - "3.4"
env:
  global:
    - JOB_PATH=/tmp/devel_job
  matrix:
    - ROS_DISTRO_NAME=indigo OS_NAME=ubuntu OS_CODE_NAME=trusty ARCH=amd64
    #- ROS_DISTRO_NAME=jade OS_NAME=ubuntu OS_CODE_NAME=trusty ARCH=amd64
    #- ROS_DISTRO_NAME=kinetic OS_NAME=ubuntu OS_CODE_NAME=xenial ARCH=amd64
install:
  # either install the latest released version of ros_buildfarm
  - pip install ros_buildfarm
  # or checkout a specific branch
  #- git clone -b master https://github.com/ros-infrastructure/ros_buildfarm /tmp/ros_buildfarm
  #- pip install /tmp/ros_buildfarm

  # use either of the two following options depending on the chosen build tool
  # checkout catkin for catkin_test_results script
  - git clone https://github.com/ros/catkin /tmp/catkin
  # install colcon for test results
  - pip install colcon-core colcon-test-result

  # run devel job for a ROS repository with the same name as this repo
  - export REPOSITORY_NAME=`basename $TRAVIS_BUILD_DIR`
  # use the code already checked out by Travis
  - mkdir -p $JOB_PATH/ws/src
  - cp -R $TRAVIS_BUILD_DIR $JOB_PATH/ws/src/
  # generate the script to run a devel job for that target and repo
  - generate_devel_script.py https://raw.githubusercontent.com/ros-infrastructure/ros_buildfarm_config/production/index.yaml $ROS_DISTRO_NAME default $REPOSITORY_NAME $OS_NAME $OS_CODE_NAME $ARCH > $JOB_PATH/devel_job.sh
  - cd $JOB_PATH
  - cat devel_job.sh
  # run the actual job which involves Docker
  - sh devel_job.sh -y
    # get summary of test results
  # use either of the two following options depending on the chosen build tool
  - /tmp/catkin/bin/catkin_test_results $JOB_PATH/ws/test_results --all
  - colcon test-result --test-result-base $JOB_PATH/ws/test_results --all
notifications:
  email: false
